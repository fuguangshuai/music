/**
 * üé® È¢úËâ≤È™åËØÅÂ∑•ÂÖ∑
 * ‰∏ìÈó®Â§ÑÁêÜÈ¢úËâ≤È™åËØÅÂíåÂØπÊØîÂ∫¶Ê£ÄÊü•
 */

import tinycolor from 'tinycolor2';

/**
 * È™åËØÅÈ¢úËâ≤ÊòØÂê¶ÊúâÊïà
 */
export const validateColor = (color: string): boolean => {
  if (!color || typeof color !== 'string' || color.trim() === '') {
    return false;
  }

  try {
    const tc = tinycolor(color);
    if (!tc.isValid()) {
      return false;
    }

    const alpha = tc.getAlpha();
    return typeof alpha === 'number' && !Number.isNaN(alpha) && alpha > 0;
  } catch (error) {
    console.warn('È¢úËâ≤È™åËØÅÂ§±Ë¥•:', error);
    return false;
  }
};

/**
 * Ê£ÄÊü•È¢úËâ≤ÂØπÊØîÂ∫¶ÊòØÂê¶Á¨¶ÂêàÂèØËØªÊÄßÊ†áÂáÜ
 */
export const validateColorContrast = (color: string, theme: 'light' | 'dark'): boolean => {
  if (!validateColor(color)) return false;

  const backgroundColor = theme === 'dark' ? '#000000' : '#ffffff';
  const contrast = tinycolor.readability(color, backgroundColor);
  return contrast >= 4.5; // WCAG AA Ê†áÂáÜ
};

/**
 * Ëé∑ÂèñÈ¢úËâ≤ÁöÑ‰∫ÆÂ∫¶ÂÄº
 */
export const getColorBrightness = (color: string): number => {
  if (!validateColor(color)) return 0;

  const tc = tinycolor(color);
  return tc.getBrightness();
};

/**
 * Ê£ÄÊü•È¢úËâ≤ÊòØÂê¶‰∏∫Ê∑±Ëâ≤
 */
export const isDarkColor = (color: string): boolean => {
  return getColorBrightness(color) < 128;
};

/**
 * Ê£ÄÊü•È¢úËâ≤ÊòØÂê¶‰∏∫ÊµÖËâ≤
 */
export const isLightColor = (color: string): boolean => {
  return getColorBrightness(color) >= 128;
};

/**
 * Ëé∑ÂèñÈ¢úËâ≤ÁöÑÂØπÊØîËâ≤ÔºàÈªëËâ≤ÊàñÁôΩËâ≤Ôºâ
 */
export const getContrastColor = (color: string): string => {
  return isDarkColor(color) ? '#ffffff' : '#000000';
};

/**
 * ‰ºòÂåñÈ¢úËâ≤‰ª•ÈÄÇÂ∫îÁâπÂÆö‰∏ªÈ¢ò
 */
export const optimizeColorForTheme = (color: string, theme: 'light' | 'dark'): string => {
  if (!validateColor(color)) {
    return theme === 'dark' ? '#ffffff' : '#000000';
  }

  const tc = tinycolor(color);

  if (theme === 'dark') {
    // Âú®Ê∑±Ëâ≤‰∏ªÈ¢ò‰∏≠ÔºåÁ°Æ‰øùÈ¢úËâ≤Ë∂≥Â§ü‰∫Æ
    if (tc.getBrightness() < 100) {
      return tc.lighten(30).toString();
    }
  } else {
    // Âú®ÊµÖËâ≤‰∏ªÈ¢ò‰∏≠ÔºåÁ°Æ‰øùÈ¢úËâ≤‰∏ç‰ºöÂ§™‰∫Æ
    if (tc.getBrightness() > 200) {
      return tc.darken(20).toString();
    }
  }

  return color;
};

/**
 * ÁîüÊàêÈ¢úËâ≤ÁöÑÂèò‰ΩìÔºàÊõ¥‰∫Æ/Êõ¥ÊöóÁöÑÁâàÊú¨Ôºâ
 */
export const generateColorVariants = (color: string) => {
  if (!validateColor(color)) {
    return {
      lighter: '#ffffff',
      darker: '#000000',
      original: color
    };
  }

  const tc = tinycolor(color);

  return {
    lighter: tc.lighten(20).toString(),
    darker: tc.darken(20).toString(),
    original: color
  };
};
